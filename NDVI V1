

//Ethiopia shapefile

var ETH = ee.FeatureCollection("FAO/GAUL/2015/level0")
.filter(ee.Filter.eq("ADM0_NAME", "Ethiopia"));

//Clipped MODIS NDVI data
var modis = ee.ImageCollection('MODIS/061/MOD13Q1')
                  .map(function(image){return image.clip(ETH)});


var ndvi = modis.select('NDVI');
print(ndvi,"MODIS NDVI raw");

//Nice visual parameters for mapping
var ndviVis = {
  min: 0.0,
  max: 8000.0,
  palette: [
    'FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901',
    '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01',
    '012E01', '011D01', '011301'
  ],
};

Map.setCenter(39.60751790799297,9.180887460082461, 5);
Map.addLayer(ndvi, ndviVis, 'NDVI', 0);

//Download NDVI by layer
//var batch = require('users/fitoprincipe/geetools:batch');
//batch.Download.ImageCollection.toDrive(ndvi, "Ethiopia_NDVI", {scale:250});


//Hysplit model paths and locust sighting points
var fPaths = ee.FeatureCollection("users/salem043/Locusts/fwd_traj_output")
                .filterBounds(ETH);
                
var sights = ee.FeatureCollection("users/salem043/Locusts/swarms_clean")
                .filterBounds(ETH)
                .filter(ee.Filter.equals('startYr', 2014));
  

Map.addLayer(fPaths.draw({color: 'red', strokeWidth: 1}), {}, 'Forward paths', 0);
Map.addLayer(sights.draw({color: 'purple'}), {}, 'Sighting points', 0);


//Select one path based on swarm ID and transform it to points

print(fPaths.limit(10), "Forward paths");

var demoP = fPaths.filter(ee.Filter.equals('swarm_id', "21967_tmin5"));

print(demoP.limit(5), "Demo path for practice");
Map.addLayer(demoP.draw({color: 'red', strokeWidth: 3}), {}, 'Demo forward path', 1);

//Identify sighting points around the path - this is just to help keep track 
//of what is going on.

Map.setCenter(42.736308018880635,9.589702986681909, 10);

var demoP2 = demoP.geometry();
var buffer = demoP2.buffer(10000);


var demoPoints = sights.filterBounds(demoP.geometry().buffer(10000)); //10k buffer


Map.addLayer(demoPoints.draw({color: 'blue'}), {}, 'Demo sighting points', 0);

//Note: all points recorded in March or May of 2014
print(demoPoints, "Point data for demo path");

var Mar = demoPoints.filter(ee.Filter.equals('startMo', 3));
var Apr = demoPoints.filter(ee.Filter.equals('startMo', 4));
var May = demoPoints.filter(ee.Filter.equals('startMo', 5));

Map.addLayer(Mar.draw({color: 'red'}), {}, 'Sightings March', 0);
Map.addLayer(Apr.draw({color: 'orange'}), {}, 'Sightings April', 0);
Map.addLayer(May.draw({color: 'blue'}), {}, 'Sightings May', 0);


//If treatment is mostly in May, let's compare April and May 2014 data for area

var ndviApr_4_7 = ndvi.filter(ee.Filter.date('2014-04-01', '2014-04-08'));
var ndviApr_4_23 = ndvi.filter(ee.Filter.date('2014-04-09', '2014-04-30'));
var ndviApr_5_9 = ndvi.filter(ee.Filter.date('2014-05-01', '2014-05-10'));
var ndviApr_5_25 = ndvi.filter(ee.Filter.date('2014-05-11', '2014-05-30'));

Map.setCenter(42.86, 9.99, 15);

Map.addLayer(ndviApr_4_7, ndviVis, 'NDVI April 7th 2014', 1);
Map.addLayer(ndviApr_4_23, ndviVis, 'NDVI April 23rd 2014', 1);
Map.addLayer(ndviApr_5_9, ndviVis, 'NDVI May 9th 2014', 1);
Map.addLayer(ndviApr_5_25, ndviVis, 'NDVI May 25th 2014', 1);
Map.addLayer(May.draw({color: 'blue'}), {}, 'Sightings May', 1);
