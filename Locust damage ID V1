//Locusts and agriculture in Ethiopia project
//Cheikh Fall, Amy Damon, and Colette Salemi
//Identifying damage areas using machine learning
//Version 1
//Last updated: 6-29-23


//Objective
  //Identify ROI where we have evidence of locust presence based on the Hysplit model
  //Use non-ROI and MODIS NDVI 16-day 2000-2014 to predict NDVI for 2014
  //Apply algorithm to predict NDVI in the ROI area for 2014
  //Export 2014 maps: predicted and real
  //In R, identify the areas where we see a significant reduction in NDVI relative to predictions.
  //  Determine dates for the corresponding path and how these align with the lower outcome



/////////////////////////////////////////////////////////////////////////////////////////////////
//
//Call on hysplit vectors (a dataframe) and Ethiopia ADM0 data.
//Create bounding box around vectors and then a 20km buffer around
//
/////////////////////////////////////////////////////////////////////////////////////////////////

var fPaths = ee.FeatureCollection("users/salem043/Locusts/fwd_traj_output");
print(fPaths.limit(5), "Locust paths");

var ETH = ee.FeatureCollection("FAO/GAUL/2015/level0")
.filter(ee.Filter.eq("ADM0_NAME", "Ethiopia"));
print("Ethiopia ADM0", ETH);


Map.addLayer(fPaths.draw({color: 'red', strokeWidth: 1}), {}, 'Forward paths', 0);




var buffered = fPaths.map(function(f) {
  return f.buffer(20000, 100); 
});

///Map.addLayer(buffered, "10 km buffers around all paths");

var buffsUnion = buffered.union().filterBounds(ETH);
//print(buffsUnion);
//Map.addLayer(buffsUnion, { color: 'FFFF00', opacity: 0.25 }, 'Buffered Union');



/////////////////////////////////////////////////////////////////////////////////////////////////
//
//Remove ROI from Ethiopia shapefile to get area for training and testing
//
/////////////////////////////////////////////////////////////////////////////////////////////////

var buffsUnion = buffsUnion.geometry();
//print(buffsUnion);
var ETH = ETH.geometry();


var mlArea = ETH.difference(buffsUnion);

//Map.addLayer(mlArea, {}, "Area for data training")


/////////////////////////////////////////////////////////////////////////////////////////////////
//
//Crop NDVI data to ml area
//
/////////////////////////////////////////////////////////////////////////////////////////////////

var modis = ee.ImageCollection('MODIS/061/MOD13Q1').filterBounds(mlArea);
                  //.map(function(image){return image.clip(mlArea)});


var ndvi = modis.select('NDVI');
//print(ndvi,"MODIS NDVI raw clipped");

function clp(img) {
  return img.clip(mlArea)
}

var ndviC = dataset.map(ndvi)

//Nice visual parameters for mapping
var ndviVis = {
  min: 0.0,
  max: 8000.0,
  palette: [
    'FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901',
    '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01',
    '012E01', '011D01', '011301'
  ],
};

var ndviDemo = ndvi.filter(ee.Filter.date('2014-04-01', '2014-04-08'));

Map.addLayer( ndviDemo, ndviVis, 'NDVI', 0);



//Develop supervisted classification algorithm predicting NDVI in 2014 based on time series of NDVI (2000-2013)





//Test on testing data




//Apply to 2014 data years for buffer area




//Export 2014 predictions and 2014 outcomes in buffer area



